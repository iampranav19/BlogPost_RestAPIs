package com.pranav.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.pranav.exception.ResourceNotFoundException;
import com.pranav.payload.LoginDto;
import com.pranav.payload.RegisterDto;
import com.pranav.repository.RoleRepository;
import com.pranav.repository.UserRepository;
import com.pranav.service.AuthService;
@Service
public class AuthServiceImpl implements AuthService {

	@Autowired
	private AuthenticationManager authenticationManager;
	
	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	RoleRepository roleRepository;
	
	@Autowired
	PasswordEncoder passwordEncoder;
	
	@Override
	public String login(LoginDto loginDto) {
		// TODO Auto-generated method stub
		
		Authentication authenticate = authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(loginDto.getUsernameOrEmail(), loginDto.getPassword()));
		SecurityContextHolder.getContext().setAuthentication(authenticate);
		return "User Login successfully!";
	}

	@Override
	public String registered(RegisterDto registerDto) {
		
		// add check for username exist in database or not
		if(userRepository.existsByUsername(registerDto.getUsername()))
		{
			throw new ResourceNotFoundException("User Already Exist", "User name", 0 );
		}
		
		return null;
	}

}
